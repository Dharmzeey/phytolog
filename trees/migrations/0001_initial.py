# Generated by Django 5.2.3 on 2025-06-26 20:26

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Authority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_authority', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_class', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'class',
            },
        ),
        migrations.CreateModel(
            name='ConservationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_family', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'families',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_order', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SpecieStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specie_status', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tree',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('scientific_name', models.CharField(help_text='Enter Generic, Specific and Author', max_length=100, validators=[django.core.validators.MinLengthValidator(3, 'Must be greater than 3')])),
                ('genus_specie', models.CharField(default='', help_text='Enter Generic and Specific name', max_length=100, validators=[django.core.validators.MinLengthValidator(3, 'Must be greater than 3')])),
                ('leaf_image', models.ImageField(blank=True, null=True, upload_to='tree_leaf')),
                ('common_name', models.CharField(default='------', max_length=50)),
                ('local_name', models.CharField(default='------', max_length=50)),
                ('tree_description', models.TextField()),
                ('reference', models.URLField(default='https://powo.science.kew.org')),
                ('pharmacological_details', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('authority', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='trees.authority')),
                ('conservation_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='trees.conservationstatus')),
                ('specie_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='trees.speciestatus')),
                ('tree_family', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='trees.family')),
                ('tree_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='trees.order')),
            ],
            options={
                'ordering': ['scientific_name'],
            },
        ),
    ]
